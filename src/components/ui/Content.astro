---
import Image from "@components/ui/Image.astro";
import Video from "@components/ui/Video.astro";

export interface Props {
    content: any | any[];
}

const { content } = Astro.props as any;
---

{
    () => {
        if (Array.isArray(content)) {
            return content.map((content) => <Astro.self {content} />);
        }

        const { type, style = {}, data = [], ...params } = content as any;

        switch (type) {
            case "heading":
                return (
                    <h3
                        class="text-headline text-left"
                        class:list={{
                            [`align-${style.align}`]: !!style.align
                        }}>
                        <Astro.self content={data} />
                    </h3>
                );
            case "paragraph":
                return (
                    <p
                        class="text-normal text-justify"
                        class:list={{
                            [`align-${style.align}`]: !!style.align
                        }}>
                        <Astro.self content={data} />
                    </p>
                );
            default:
                if (params.text.trim() === "/n") {
                    return <br />;
                } else if (params.url) {
                    return (
                        <a
                            href={params.url}
                            target={params.self !== false ? "_self" : "_blank"}
                            class="link"
                            class:list={{
                                bold: style.bold,
                                italic: style.italic,
                                underline: style.underline,
                                strikethrough: style.strikethrough,
                                [`color-${style.color}`]: !!style.color
                            }}>
                            {params.text}
                        </a>
                    );
                } else if (params.text) {
                    if (Object.keys(style).length > 0) {
                        return (
                            <span
                                class:list={{
                                    bold: style.bold,
                                    italic: style.italic,
                                    underline: style.underline,
                                    strikethrough: style.strikethrough,
                                    [`color-${style.color}`]: !!style.color
                                }}>
                                {params.text}
                            </span>
                        );
                    }
                    return params.text;
                }
        }
    }
}

<style is:global>
    .align-left {
        text-align: left;
    }

    .align-center {
        text-align: center;
    }

    .align-right {
        text-align: right;
    }

    .align-justify {
        text-align: justify;
    }

    .bold {
        color: var(--color-foreground-variant);
        font-weight: 600;
    }

    .italic {
        font-style: italic;
    }

    .underline {
        text-decoration: underline;
    }

    .strikethrough {
        text-decoration: line-through;
    }

    .underline.strikethrough {
        text-decoration: underline line-through;
    }

    .color-red {
        color: var(--color-red);
    }

    .color-orange {
        color: var(--color-orange);
    }

    .color-yellow {
        color: var(--color-yellow);
    }

    .color-green {
        color: var(--color-green);
    }

    .color-teal {
        color: var(--color-teal);
    }

    .color-cyan {
        color: var(--color-cyan);
    }

    .color-blue {
        color: var(--color-blue);
    }

    .color-purple {
        color: var(--color-purple);
    }

    .color-magenta {
        color: var(--color-magenta);
    }

    .color-gray {
        color: var(--color-gray);
    }

    .aspect-ratio-1 {
        aspect-ratio: 1;
    }

    .aspect-ratio-2\/3 {
        aspect-ratio: 2/3;
    }

    .aspect-ratio-3\/2 {
        aspect-ratio: 3/2;
    }

    .aspect-ratio-3\/4 {
        aspect-ratio: 3/4;
    }

    .aspect-ratio-4\/3 {
        aspect-ratio: 4/3;
    }

    .aspect-ratio-9\/16 {
        aspect-ratio: 9/16;
    }

    .aspect-ratio-16\/9 {
        aspect-ratio: 16/9;
    }
</style>

<!-- 
case "list":
    return <ul
        class="list-disc"
        class:list={{
            [`align-${attributes.align}`]: !!attributes.align  
        }}>
            <Astro.self content={children} />
        </ul>;
case "list-item":
    return <li
        class="text-normal text-left ml-8"
        class:list={{
            [`align-${attributes.align}`]: !!attributes.align  
        }}>
            <Astro.self content={children} />
        </li>;  
    
case "link":
    return <a
        href={attributes.url}
        target={attributes.self ? "_self" : "_blank"}
        class="link"
        class:list={{
            "bold": attributes.bold,
            "italic": attributes.italic,
            "underline": attributes.underline,
            "strikethrough": attributes.strikethrough,
            [`color-${attributes.color}`]: !!attributes.color
        }}>
            {data}
        </a>;
case "image":
    return <Image
        url={attributes.url}
        caption={attributes.caption}
        class:list={{
            [`col-${attributes.cols}`]: !!attributes.cols,
            [`row-${attributes.rows}`]: !!attributes.rows,
            [`aspect-ratio-${attributes["aspect-ratio"]}`]: !!attributes["aspect-ratio"]
        }} />;
case "video":
    return <Video
        url={attributes.url}
        title={attributes.title}
        thumbnail={attributes.thumbnail}
        class:list={{
            [`col-${attributes.cols}`]: !!attributes.cols,
            [`row-${attributes.rows}`]: !!attributes.rows,
            [`aspect-ratio-${attributes["aspect-ratio"]}`]: !!attributes["aspect-ratio"]
        }} />;
case "mosaic":
    return <div 
        class="mosaic"
        class:list={{
            [`size-${attributes.size}`]: !!attributes.size
        }}>
            <Astro.self content={children} />
        </div>;-->
